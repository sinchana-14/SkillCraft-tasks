//index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Stopwatch App</title>
  <link rel="stylesheet" href="styles.css"/>
</head>
<body>
  <div class="container">
    <h1>‚è± Stopwatch</h1>
    <div class="display" id="display">00:00:00.00</div>

    <div class="buttons">
      <button id="startStopBtn">Start</button>
      <button id="lapBtn" disabled>Lap</button>
      <button id="resetBtn" disabled>Reset</button>
    </div>

    <h2>Laps</h2>
    <ul id="laps"></ul>
  </div>

  <script src="script.js"></script>
</body>
</html>


//styles.css
/* Reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  background: linear-gradient(135deg, #1e3c72, #2a5298);
  color: #fff;
}

.container {
  text-align: center;
  background: rgba(0, 0, 0, 0.4);
  padding: 2rem;
  border-radius: 15px;
  box-shadow: 0 8px 16px rgba(0,0,0,0.4);
  width: 350px;
}

h1 {
  margin-bottom: 1rem;
}

.display {
  font-size: 2.5rem;
  margin: 1.5rem 0;
  letter-spacing: 2px;
}

.buttons {
  margin-bottom: 1.5rem;
}

button {
  padding: 0.7rem 1.2rem;
  margin: 0.3rem;
  border: none;
  border-radius: 30px;
  cursor: pointer;
  font-size: 1rem;
  transition: background 0.3s;
}

#startStopBtn {
  background: #4caf50;
  color: #fff;
}

#startStopBtn.pause {
  background: #f44336;
}

#resetBtn {
  background: #ff9800;
  color: #fff;
}

#lapBtn {
  background: #2196f3;
  color: #fff;
}

button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

ul {
  list-style: none;
  max-height: 150px;
  overflow-y: auto;
  padding: 0;
  margin-top: 1rem;
}

ul li {
  background: rgba(255,255,255,0.1);
  margin: 5px 0;
  padding: 0.5rem;
  border-radius: 8px;
}


//script.js
let startTime = 0;
let elapsedTime = 0;
let timerInterval;
let isRunning = false;

const display = document.getElementById("display");
const startStopBtn = document.getElementById("startStopBtn");
const resetBtn = document.getElementById("resetBtn");
const lapBtn = document.getElementById("lapBtn");
const laps = document.getElementById("laps");

// Format time as hh:mm:ss.ms
function formatTime(ms) {
  const hours = String(Math.floor(ms / 3600000)).padStart(2, "0");
  const minutes = String(Math.floor((ms % 3600000) / 60000)).padStart(2, "0");
  const seconds = String(Math.floor((ms % 60000) / 1000)).padStart(2, "0");
  const centiseconds = String(Math.floor((ms % 1000) / 10)).padStart(2, "0");

  return `${hours}:${minutes}:${seconds}.${centiseconds}`;
}

// Update display
function updateDisplay() {
  const currentTime = Date.now() - startTime + elapsedTime;
  display.textContent = formatTime(currentTime);
}

// Start/Pause button
startStopBtn.addEventListener("click", () => {
  if (!isRunning) {
    startTime = Date.now();
    timerInterval = setInterval(updateDisplay, 10);
    isRunning = true;

    startStopBtn.textContent = "Pause";
    startStopBtn.classList.add("pause");
    resetBtn.disabled = false;
    lapBtn.disabled = false;
  } else {
    clearInterval(timerInterval);
    elapsedTime += Date.now() - startTime;
    isRunning = false;

    startStopBtn.textContent = "Start";
    startStopBtn.classList.remove("pause");
  }
});

// Reset button
resetBtn.addEventListener("click", () => {
  clearInterval(timerInterval);
  startTime = 0;
  elapsedTime = 0;
  isRunning = false;

  display.textContent = "00:00:00.00";
  startStopBtn.textContent = "Start";
  startStopBtn.classList.remove("pause");
  resetBtn.disabled = true;
  lapBtn.disabled = true;
  laps.innerHTML = "";
});

// Lap button
lapBtn.addEventListener("click", () => {
  if (isRunning) {
    const currentTime = Date.now() - startTime + elapsedTime;
    const li = document.createElement("li");
    li.textContent = formatTime(currentTime);
    laps.appendChild(li);
  }
});
